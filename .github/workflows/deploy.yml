name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            **/package-lock.json

      - name: Show tree (debug)
        run: |
          pwd
          ls -la
          if [ -f package.json ]; then cat package.json | head -n 40; fi

      - name: Check for .env file
        run: |
          if [ ! -f .env ]; then
            echo "‚ùå Missing .env file!"
            echo ""
            echo "üìã To fix this issue:"
            echo "1. Copy .env.example to .env: cp .env.example .env"
            echo "2. Update .env with your actual values (see README.md)"
            echo "3. Commit and push your changes"
            echo ""
            echo "‚ÑπÔ∏è  For local development, the app will work with placeholder values from .env.example"
            echo "‚ÑπÔ∏è  For production deployment, you need real API URLs in .env"
            echo ""
            exit 1
          else
            echo "‚úÖ .env file found"
          fi

      - name: Install deps (ci if lockfile; else install)
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci"
            npm ci
          else
            echo "No package-lock.json found; falling back to npm install"
            npm install --no-fund --no-audit
          fi

      - name: Build
        run: npm run build

      - uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4

